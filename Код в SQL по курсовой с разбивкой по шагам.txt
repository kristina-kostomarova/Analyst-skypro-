-------Шаг 1 дата первой транзакции
select user_id, first_payment_date
from
     (select*,
         row_number() over (partition by user_id order by transaction_datetime asc) as rn,
         transaction_datetime as first_payment_date
     from skyeng_db.payments
     where payment_amount is not null and payment_amount >0) as first_payments
where rn = 1

-------Шаг 2 Уникальные даты уроков
select distinct dt
from 
     (select *
         ,date(class_start_datetime)  as dt
     from skyeng_db.classes) as all_dates

-------Шаг 3 Объединение таблиц
with first_payments as
   (select user_id, first_payment_date
from
     (select*,
         row_number() over (partition by user_id order by transaction_datetime asc) as rn,
         transaction_datetime as first_payment_date
     from skyeng_db.payments
     where payment_amount is not null and payment_amount >0) as first_payments
where rn = 1),
all_dates as 
   (select distinct dt
from 
     (select *
         ,date(class_start_datetime)  as dt
     from skyeng_db.classes) as all_dates),
all_dates_by_user as 
   (select user_id, dt
  from all_dates
  join first_payments
  on all_dates.dt>=first_payments.first_payment_date)
  select user_id, dt
  from all_dates_by_user
  
-------Шаг 4 Все изменения балансов
select user_id,
  date(transaction_datetime)  as payment_date,
         sum(classes) as transaction_balance_change
     from skyeng_db.payments
group by user_id,payments.transaction_datetime

-------Шаг 5 Объединение 
with first_payments as
   (select user_id, first_payment_date
from
     (select*,
         row_number() over (partition by user_id order by transaction_datetime asc) as rn,
         transaction_datetime as first_payment_date
     from skyeng_db.payments
     where payment_amount is not null and payment_amount >0) as first_payments
     where rn = 1),

all_dates as 
   (select distinct dt
from 
     (select *
         ,date(class_start_datetime)  as dt
     from skyeng_db.classes) as all_dates),

all_dates_by_user as 
   (select user_id, dt
  from all_dates
  join first_payments
  on all_dates.dt>=first_payments.first_payment_date),

payments_by_dates as
   (select user_id,
         date(transaction_datetime)  as payment_date,
         sum(classes) as transaction_balance_change
    from skyeng_db.payments
     group by user_id,payments.transaction_datetime),
 
 payments_by_dates_cumsum as 
    (select b.user_id, payment_date,transaction_balance_change,  
         sum(transaction_balance_change) over (partition by b.user_id order by dt) as transaction_balance_change_cs
     from all_dates_by_user a
     join payments_by_dates b
     on a.user_id=b.user_id
     and a.dt=b.payment_date)
select user_id, payment_date, transaction_balance_change_cs   
from  payments_by_dates_cumsum
  
  -------Шаг 6 изменения балансов из-за прохождения уроков
with first_payments as
   (select user_id, first_payment_date
from
     (select*,
         row_number() over (partition by user_id order by transaction_datetime asc) as rn,
         transaction_datetime as first_payment_date
     from skyeng_db.payments
     where payment_amount is not null and payment_amount >0) as first_payments
     where rn = 1),

all_dates as 
   (select distinct dt
from 
     (select *
         ,date(class_start_datetime)  as dt
     from skyeng_db.classes) as all_dates),

all_dates_by_user as 
   (select user_id, dt
  from all_dates
  join first_payments
  on all_dates.dt>=first_payments.first_payment_date),

payments_by_dates as
   (select user_id,
         date(transaction_datetime)  as payment_date,
         sum(classes) as transaction_balance_change
    from skyeng_db.payments
     group by user_id,payments.transaction_datetime),
 
 payments_by_dates_cumsum as 
    (select b.user_id, payment_date,transaction_balance_change,  
         sum(transaction_balance_change) over (partition by b.user_id order by dt) as transaction_balance_change_cs
     from all_dates_by_user a
     join payments_by_dates b
     on a.user_id=b.user_id
     and a.dt=b.payment_date),

classes_by_dates as
   (select user_id,class_date, sum_classes * -1 as classes
   from (select user_id, class_start_datetime as class_date,
   sum(case when class_type='regular' then 1 
            when class_type='single'then 1 
            when class_status = 'success'  then 1 
            when class_status = 'failed_by_student' then 1  else 0 end) as sum_classes
   from skyeng_db.classes
   group by class_type, user_id, class_start_datetime)t)
   select *
   from classes_by_dates
   
   -------Шаг 7 Хранение кумулятивной суммы количества пройденных уроков
   with first_payments as 
(select user_id, 
       date_trunc('day', min(transaction_datetime)) as first_payment_date
from skyeng_db.payments
where status_name = 'success'
group by user_id),

all_dates as 
   (select distinct date_trunc ('day', class_start_datetime) as dt
from skyeng_db.classes
where class_start_datetime<'2017-01-01'),

all_dates_by_user as 
   (select user_id
       , dt 
from all_dates a
join first_payments b 
     on dt >= first_payment_date
order by user_id, dt),
  
payments_by_dates as
   (select user_id,
         date(transaction_datetime)  as payment_date,
         sum(classes) as transaction_balance_change
    from skyeng_db.payments
     where status_name = 'success'
     group by user_id,payments.transaction_datetime),
 
 payments_by_dates_cumsum as 
    (select c.user_id, c.dt, transaction_balance_change,  
         sum(coalesce(transaction_balance_change,0))  over(partition by c.user_id order by dt) as transaction_balance_change_cs
     from all_dates_by_user c
     left join payments_by_dates d
     on c.user_id = d.user_id
     and c.dt = d.payment_date),

classes_by_dates as 
(select user_id,
       date_trunc('day', class_start_datetime) as class_date,
       count(id_class) * -1 as classes
from skyeng_db.classes
where class_type != 'trial'
      and class_status in ('success', 'failed_by_student')
group by 1, 2),
   
    classes_by_dates_dates_cumsum as
      (select e.user_id, e.dt, classes,
         sum(coalesce(classes,0)) over(partition by e.user_id order by dt) as classes_cs
     from all_dates_by_user e
     left join classes_by_dates f
     on e.user_id=f.user_id
     and e.dt=f.class_date)
select user_id, dt, classes_cs
from classes_by_dates_dates_cumsum

-------Шаг 8 Балансы каждого студента

with first_payments as 
(select user_id, 
       date_trunc('day', min(transaction_datetime)) as first_payment_date
from skyeng_db.payments
where status_name = 'success'
group by user_id),

all_dates as 
   (select distinct date_trunc ('day', class_start_datetime) as dt
from skyeng_db.classes
where class_start_datetime<'2017-01-01'),

all_dates_by_user as 
   (select user_id
       , dt 
from all_dates a
join first_payments b 
     on dt >= first_payment_date
order by user_id, dt),
  
payments_by_dates as
   (select user_id,
         date(transaction_datetime)  as payment_date,
         sum(classes) as transaction_balance_change
    from skyeng_db.payments
     where status_name = 'success'
     group by user_id,payments.transaction_datetime),
 
 payments_by_dates_cumsum as 
    (select c.user_id, c.dt, transaction_balance_change,  
         sum(coalesce(transaction_balance_change,0))  over(partition by c.user_id order by dt) as transaction_balance_change_cs
     from all_dates_by_user c
     left join payments_by_dates d
     on c.user_id = d.user_id
     and c.dt = d.payment_date),

classes_by_dates as 
(select user_id,
       date_trunc('day', class_start_datetime) as class_date,
       count(id_class) * -1 as classes
from skyeng_db.classes
where class_type != 'trial'
      and class_status in ('success', 'failed_by_student')
group by 1, 2),
   
    classes_by_dates_dates_cumsum as
      (select e.user_id, e.dt, classes,
         sum(coalesce(classes,0)) over(partition by e.user_id order by dt) as classes_cs
     from all_dates_by_user e
     left join classes_by_dates f
     on e.user_id=f.user_id
     and e.dt=f.class_date),
balances as
 (select g.user_id,
         g.dt,
         transaction_balance_change,
         transaction_balance_change_cs,
         classes,
         classes_cs,
         classes_cs + transaction_balance_change_cs as balance
     from payments_by_dates_cumsum g
     join classes_by_dates_dates_cumsum h
     on g. user_id = h. user_id
     and g. dt = h. dt)
select*
from balances
order by user_id, dt
limit 1000

-------Шаг 9 Балансы каждого студента

with first_payments as 
(select user_id, 
       date_trunc('day', min(transaction_datetime)) as first_payment_date
from skyeng_db.payments
where status_name = 'success'
group by user_id),

all_dates as 
   (select distinct date_trunc ('day', class_start_datetime) as dt
from skyeng_db.classes
where class_start_datetime<'2017-01-01'),

all_dates_by_user as 
   (select user_id
       , dt 
from all_dates a
join first_payments b 
     on dt >= first_payment_date
order by user_id, dt),
  
payments_by_dates as
   (select user_id,
         date(transaction_datetime)  as payment_date,
         sum(classes) as transaction_balance_change
    from skyeng_db.payments
     where status_name = 'success'
     group by user_id,payments.transaction_datetime),
 
 payments_by_dates_cumsum as 
    (select c.user_id, c.dt, transaction_balance_change,  
         sum(coalesce(transaction_balance_change,0))  over(partition by c.user_id order by dt) as transaction_balance_change_cs
     from all_dates_by_user c
     left join payments_by_dates d
     on c.user_id = d.user_id
     and c.dt = d.payment_date),

classes_by_dates as 
(select user_id,
       date_trunc('day', class_start_datetime) as class_date,
       count(id_class) * -1 as classes
from skyeng_db.classes
where class_type != 'trial'
      and class_status in ('success', 'failed_by_student')
group by 1, 2),
   
    classes_by_dates_dates_cumsum as
      (select e.user_id, e.dt, classes,
         sum(coalesce(classes,0)) over(partition by e.user_id order by dt) as classes_cs
     from all_dates_by_user e
     left join classes_by_dates f
     on e.user_id=f.user_id
     and e.dt=f.class_date),
     
balances as
 (select g.user_id,
         g.dt,
         transaction_balance_change,
         transaction_balance_change_cs,
         classes,
         classes_cs,
         classes_cs + transaction_balance_change_cs as balance
     from payments_by_dates_cumsum g
     join classes_by_dates_dates_cumsum h
     on g. user_id = h. user_id
     and g. dt = h. dt)

select dt,
     sum (transaction_balance_change) as sum_transaction_balance_change,
     sum (transaction_balance_change_cs) as sum_transaction_balance_change_cs,
     sum (classes) as sum_classes,
     sum (classes_cs) as sum_classes_cs,
     sum (balance) as sum_balance
from balances
    group by dt
    order by dt
